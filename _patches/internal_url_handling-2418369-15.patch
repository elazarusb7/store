diff --git a/pathologic.module b/pathologic.module
index 8f77b03..6929d97 100644
--- a/pathologic.module
+++ b/pathologic.module
@@ -192,10 +192,10 @@ function _pathologic_replace($matches) {
     $new_parts['path'] = rawurldecode($new_parts['path']);
     $parts = $new_parts;
     // Don't do language handling for file paths.
-    $cached_settings['is_file'] = TRUE;
+    $is_file = TRUE;
   }
   else {
-    $cached_settings['is_file'] = FALSE;
+    $is_file = FALSE;
   }
 
   // Let's also bail out of this doesn't look like a local path.
@@ -289,12 +289,14 @@ function _pathologic_replace($matches) {
 
   // If we didn't previously identify this as a file, check to see if the file
   // exists now that we have the correct path relative to DRUPAL_ROOT
-  if (!$cached_settings['is_file']) {
-    $cached_settings['is_file'] = !empty($parts['path']) && is_file(DRUPAL_ROOT . '/' . $parts['path']);
+  if (!$is_file) {
+    $is_file = !empty($parts['path']) && is_file(DRUPAL_ROOT . '/' . $parts['path']);
   }
 
   // Okay, deal with language stuff.
-  // Let's see if we can split off a language prefix from the path.
+  // Let's see if path has a language prefix, so we can distinguish the target
+  // language for this path.
+  $specific_language = NULL;
   if (\Drupal::moduleHandler()->moduleExists('language')) {
     // This logic is based on
     // \Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationUrl::getLangcode().
@@ -308,8 +310,7 @@ function _pathologic_replace($matches) {
     // Search for prefix within added languages.
     foreach ($languages as $language) {
       if (isset($config['prefixes'][$language->getId()]) && $config['prefixes'][$language->getId()] == $prefix) {
-        $parts['path'] = implode('/', $path_args);
-        $parts['language_obj'] = $language;
+        $specific_language = $language;
         break;
       }
     }
@@ -332,7 +333,7 @@ function _pathologic_replace($matches) {
       'absolute' => $cached_settings['current_settings']['protocol_style'] !== 'path',
       // If we seem to have found a language for the path, pass it along to
       // url(). Otherwise, ignore the 'language' parameter.
-      'language' => isset($parts['language_obj']) ? $parts['language_obj'] : NULL,
+      'language' => isset($specific_language) ? $specific_language : NULL,
       // A special parameter not actually used by url(), but we use it to see if
       // an alter hook implementation wants us to just pass through the original
       // URL.
@@ -359,8 +360,10 @@ function _pathologic_replace($matches) {
   }
   else {
     try {
-      $url = Url::fromUri('base://' . $url_params['path'], $url_params['options'])
-        ->toString();
+      // For everything we did not recognize as files, we use the internal
+      // scheme so aliases and language prefixes are set correctly.
+      $scheme = ($is_file) ? 'base:/' : 'internal:/';
+      $url = Url::fromUri($scheme . $url_params['path'], $url_params['options'])->toString();
     }
     catch (\Exception $e) {
       // In case of an error, e.g. completely invalid URL, return it unchanged.
<?php

/**
 * @file
 * Provides hooks to the computed_fields module to allowo PHP processing of
 *   virtual entity fields.
 */

/**
 * Implements hook_compute().
 * Each hook responsible for processing a single generated field.
 *
 * NOTE: The naming convention for this hook is broken. We have to use the name
 * of the module providing the hook rather than our own module.
 *
 * @param $entity_type_manager
 * @param $entity
 * @param $fields
 * @param $delta
 *
 * @return int
 *   True if this is a print only product AND it is out of stock.
 */
function computed_field_field_print_only_out_of_stock_compute($entity_type_manager, $entity, $fields, $delta): string {
  // Can't be a (bool) cuz FALSE sets value to 1 in the field. ???
  (int) $print_out_of_stock = 0;

  if ($entity->field_pep_product_type->value == 'order_only') {
    // Painstakingly determine number in stock.
    $product_id = $entity->product_id->value;
    $product_variation_id = array_pop($entity->getVariationIds());
    $variation = \Drupal::entityTypeManager()->getStorage('commerce_product_variation')->load($product_variation_id);
    // Number is stored as float for some unimaginable reason, cast it...
    $quantity_in_stock = (int) \Drupal::service('samhsa_pep_stock.pep_stock_utility')->getStock($variation);

    $print_out_of_stock = $quantity_in_stock ? 0 : 1;
  }

  return $print_out_of_stock;
}

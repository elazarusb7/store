<?php

/**
 * @file
 * Contains samhsa_pep_product_redirect.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\Core\Link;

/**
 * Implements hook_help().
 */
function samhsa_pep_product_redirect_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the samhsa_pep_product_redirect module.
    case 'help.page.samhsa_pep_product_redirect':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module allows to set a redirect from a node itself') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function samhsa_pep_product_redirect_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == 'redirect_redirect_form') {
    $form['redirect_source']['#markup'] = '<p>Only redirect from a product using <i>/product/[id]</i> URL and not an alias</p>';
    $form['redirect_redirect']['#markup'] = '<p>You may redirect to a product using <i>/product/[id]</i> URL or to an alias</p>';
  }

  if ($form_id == 'commerce_product_samhsa_publication_edit_form') {

    // Drupal\commerce_product\Entity\Product.
    $product = \Drupal::routeMatch()->getParameter('commerce_product');
    $pid = $product->id();

    // URL redirect options for administrators.
    $entity_storage = \Drupal::entityTypeManager()->getStorage('path_alias');
    $query_result = $entity_storage->getQuery()
      ->condition('path', "/product/$pid")
      ->execute();

    $aliases = [];
    if (!empty($query_result)) {
      if (!empty($entities = $entity_storage->loadMultiple($query_result))) {
        foreach ($entities as $entity) {
          $aliases[] = $entity->getAlias();
        }
      }
    }
    if ($aliases) {
      $form['path']['#suffix'] = '<strong>All current aliases</strong><br />' . implode('<br />', $aliases);
    }

    // Get language.
    $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
    // Get alias of the node.
    $internal_path = '/product/' . $pid;
    // $current_alias = Drupal::service('path.alias_storage')->lookupPathAlias($internal_path, $lang);
    $current_alias = \Drupal::service('path_alias.manager')
      ->getAliasByPath($internal_path, $lang);

    // Add URL redirect links TO and FROM.
    // Set Redirect TO: ?redirect=product/12.
    $linkTo = Link::fromTextAndUrl('Add URL redirect TO this product', Url::fromRoute('redirect.add', [], [
      'query' => [
        // Redirect TO.
        'redirect' => $internal_path,
        'language' => $lang,
        // Return destination.
        'destination' => $internal_path . '/edit',
      ],
      'attributes' => [
        'target' => '_blank',
      ],
    ]));
    $existingRedirectsTo = lookupToRedirects($pid, $current_alias);
    $form['url_redirectTo'] = [
      '#type' => 'details',
      '#title' => t('URL redirect TO this product'),
      '#access' => \Drupal::currentUser()
        ->hasPermission('administer redirects'),
      '#group' => 'advanced',
      '#weight' => 100,
      'table' => $existingRedirectsTo,
      'content' => ['#markup' => '<p>' . $linkTo->toString() . '</p>'],
      '#open' => sizeof($existingRedirectsTo),
    ];

    // Set Redirect FROM:  ?source=product/12.
    $linkFrom = Link::fromTextAndUrl('Add URL redirect FROM this product', Url::fromRoute('redirect.add', [], [
      'query' => [
        // Redirect FROM.
        'source' => $internal_path,
        'language' => $lang,
        // Return destination.
        'destination' => $internal_path . '/edit',
      ],
      'attributes' => [
        'target' => '_blank',
      ],
    ]));
    $existingRedirectsFrom = lookupFromRedirects($pid, $current_alias);
    $form['url_redirectFrom'] = [
      '#type' => 'details',
      '#title' => t('URL redirect FROM this product'),
      '#access' => \Drupal::currentUser()
        ->hasPermission('administer redirects'),
      '#group' => 'advanced',
      '#weight' => 100,
      'table' => $existingRedirectsFrom,
      'content' => ['#markup' => '<p>' . $linkFrom->toString() . '</p>'],
      '#open' => sizeof($existingRedirectsFrom),
    ];
  }
}

/**
 *
 */
function lookupToRedirects($pid, $current_alias) {
  // Get redirects for the given item's internal path or alias.
  $query = \Drupal::database()->select('redirect', 'r');
  $query->fields('r');
  $group = $query->orConditionGroup()
    ->condition('redirect_redirect__uri', 'internal:/product/' . $pid, '=')
    ->condition('redirect_redirect__uri', '%internal:/product/' . $pid . '?%', 'LIKE')
    ->condition('redirect_redirect__uri', 'internal:' . $current_alias, '=');
  $redirects = $query->condition($group)
    ->orderBy('redirect_redirect__uri')
    ->execute();
  $redirects->allowRowCount = TRUE;
  $destination = '/product/' . $pid;

  // Get redirects if anything set for the given node.
  if ($redirects->rowCount()) {
    $redirect_list = [];
    $header = ['From', 'Operations'];
    while ($record = $redirects->fetchAssoc()) {
      $redirect_list[] = $record;
    }
    // $list = _redirect_from_list_table($redirect_list, $header, $destination, $lang);
    $list = _redirect_from_list_table($redirect_list, $header, $destination, '');
    return $list;
  }
  return [];
}

/**
 *
 */
function lookupFromRedirects($pid, $current_alias) {
  // Get redirects for the given item's internal path or alias.
  $query = \Drupal::database()->select('redirect', 'r');
  $query->fields('r');
  $group = $query->orConditionGroup()
    ->condition('redirect_source__path', 'product/' . $pid, '=')
    ->condition('redirect_source__path', 'product/' . $pid . '?%', 'LIKE')
    ->condition('redirect_source__path', 'internal:' . $current_alias, '=');
  $redirects = $query->condition($group)
    ->orderBy('redirect_source__path')
    ->execute();
  $redirects->allowRowCount = TRUE;
  $destination = '/product/' . $pid;

  // Get redirects if anything set for the given node.
  if ($redirects->rowCount()) {
    $redirect_list = [];
    $header = ['To', 'Operations'];
    while ($record = $redirects->fetchAssoc()) {
      $redirect_list[] = $record;
    }
    // Return _redirect_to_list_table($redirect_list, $header, $destination, $lang);.
    return _redirect_to_list_table($redirect_list, $header, $destination, '');
  }
  return [];
}

/**
 * Helper function to construct table using a list of redirects.
 */
function _redirect_from_list_table($redirect_list, $header, $destination, $lang) {
  $rows = [];
  foreach ($redirect_list as $redirect) {
    $row = [];
    // [redirect_source__path] => product/11
    $path = $redirect['redirect_source__path'];
    $row['source'] = Link::fromTextAndUrl($path, Url::fromUri('internal:/' . $redirect['redirect_source__path']));
    $operations = [];
    $operations['edit'] = [
      'title' => t('Edit'),
      'url' => Url::fromUri('internal:/admin/config/search/redirect/edit/' . $redirect['rid'], [
        'query' => [
          'language' => $lang,
          'destination' => $destination . '/edit',
        ],
      ]),
    ];
    $operations['delete'] = [
      'title' => t('delete'),
      'url' => Url::fromUri('internal:/admin/config/search/redirect/delete/' . $redirect['rid'], [
        'query' => [
          'language' => $lang,
          'destination' => $destination . '/edit',
        ],
      ]),
    ];
    $row['operations'] = [
      'data' => [
        '#type' => 'operations',
        '#links' => $operations,
      ],
    ];

    $rows[] = $row;
  }

  $table = [
    '#type' => 'table',
    '#header' => $header,
    '#rows' => $rows,
  ];

  return $table;
}

/**
 *
 */
function _redirect_to_list_table($redirect_list, $header, $destination, $lang) {
  $rows = [];
  // Get language.
  $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
  foreach ($redirect_list as $redirect) {
    $row = [];
    // internal:/product/1.
    $path = $redirect['redirect_redirect__uri'];
    // /product/1
    $name = str_replace('internal:', '', $redirect['redirect_redirect__uri']);
    // /product/<title>/<SKU>
    $alias = Drupal::service('path.alias_storage')
      ->lookupPathAlias($name, $lang);
    $row['source'] = Link::fromTextAndUrl(($alias != '' ? "$alias ($name)" : $name), Url::fromUri($path));
    $operations = [];
    $operations['edit'] = [
      'title' => t('Edit'),
      'url' => Url::fromUri('internal:/admin/config/search/redirect/edit/' . $redirect['rid'], [
        'query' => [
          'language' => $lang,
          'destination' => $destination . '/edit',
        ],
      ]),
    ];
    $operations['delete'] = [
      'title' => t('delete'),
      'url' => Url::fromUri('internal:/admin/config/search/redirect/delete/' . $redirect['rid'], [
        'query' => [
          'language' => $lang,
          'destination' => $destination . '/edit',
        ],
      ]),
    ];
    $row['operations'] = [
      'data' => [
        '#type' => 'operations',
        '#links' => $operations,
      ],
    ];

    $rows[] = $row;
  }

  $table = [
    '#type' => 'table',
    '#header' => $header,
    '#rows' => $rows,
  ];

  return $table;
}
